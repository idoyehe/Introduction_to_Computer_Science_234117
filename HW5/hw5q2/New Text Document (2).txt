/*-------------------------------------------------------------------------
  Include files:
--------------------------------------------------------------------------*/
#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>
/*=========================================================================
Finding how many matching for couples have by the workers' preferences
==========================================================================*/

/* put your #defines and typedefs here*/

/*-------------------------------------------------------------------------
  The main program. (describe what your program does here)
 -------------------------------------------------------------------------*/
void getScores(int*,int);
void pariUp (int[],bool[],int,int*,int,int,int*);
bool allTeamed(bool teamed[],int size);
void pairUp(int[],bool[],int,int*,int,int,int*);
int calcScore(int [],int ,int ,int);
void coverPair(int pref[], int size);

void printScores(int *pref,int size)
{
    for(int i=0;i<size;i++){
        printf("\n");
        for(int j=0;j<size;j++)
            printf("%d,",pref[size*i+j]);
    }
    printf("\n");
}
int main()
{
   // int size=0;
    //printf("How many size are there?\n");
    //scanf("%d",&size);
    //int *pref=(int*)malloc(size*size*sizeof(int));
    //printf("What are their preferences?\n");
    //getScores(pref,size);
    //printScores(pref,size);
    //int size = 4;
    //int pref[16] = { 0,1,2,3,
    //                 1,0,2,3,
    //                 1,2,0,3,
    //                 1,2,3,0 };
    int size = 16;
    int pref[256] = {
                  0,3,5,2,3,1,2,4,5,1,2,3,5,2,3,1,
                  4,0,1,2,5,3,5,2,3,1,4,2,3,4,1,2,
                  2,3,0,4,5,1,2,3,4,5,3,1,4,2,4,1,
                  1,4,3,0,4,2,3,1,4,1,5,3,2,4,1,2,
                  3,5,1,2,0,4,2,5,3,2,5,4,1,2,3,1,
                  5,1,2,4,3,0,2,5,1,2,5,3,2,1,3,2,
                  2,1,3,4,5,4,0,5,4,5,4,5,3,5,3,5,
                  5,3,5,3,5,3,4,0,2,4,2,4,1,4,1,4,
                  1,2,4,1,4,5,3,2,0,3,1,2,3,4,1,2,
                  1,2,3,4,5,5,4,3,2,0,1,1,2,3,4,5,
                  5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,
                  1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,
                  5,1,5,1,5,1,5,1,5,1,5,1,0,5,1,5,
                  1,3,1,3,1,3,1,3,2,4,2,4,2,0,4,2,
                  5,4,5,3,5,3,5,2,5,1,4,3,2,3,0,1,
                  1,2,1,3,1,4,1,5,2,3,2,4,2,5,3,0
                  };
    coverPair(pref,size);
    //free(pref);
  return 0;
}
void getScores(int pref[],int size)
/*Getting the matrix and the number of wrokers and put the date in the matrix
Length: 6 Rows*/
{
    for(int i=0;i<size;i++)
        for(int j=0;j<size;j++){
            if(i==j){
                pref[size*i+j]=0;//put zeros on the prime diagonal
                continue;
            }
            scanf("%d",&pref[size*i+j]);
        }
}
void unTeamed(bool teamed[],int size)
{
    for(int i=0;i<size;i++)teamed[i]=false;
}
bool allTeamed(bool teamed[],int size)
{
    for(int i=0;i<size;i++)
        if(!teamed[i])
            return false;
    return true;
}
int calcScore(int pref[],int size,int current,int j)
{
    return pref[size*current+j]+pref[size*j+current];
}
void coverPair(int pref[], int size)
{
    bool* teamed=(bool*)malloc(size*sizeof(bool));
    unTeamed(teamed,size);
    int current=0, score=0,howmany=0,max=0;
    int *m=&max;
    int*h=&howmany;
    printf("---------------\n\n\n");
    pairUp(pref,teamed,size,m,current,score,h);
    free(teamed);
    printf("max is:%d\n",max);
    printf("howmany is:%d\n",howmany);


}

void pairUp(int pref[], bool teamed[], int size,int* max,int current, int score, int* howmany)
{
    int s,i;
    if (allTeamed(teamed,size)){
        //for (s=0; s<current; ++s) printf(" ");
        //printf("max is: %d\n", *max);
        if(score>*max){
            for (s=0; s<current; ++s) printf(" ");
            printf("new max is: %d\n", score);
            *max=score;
            *howmany=1;
        } else if(score==*max) {
            for (s=0; s<current; ++s) printf(" ");
            printf("found more way\n", score);
            (*howmany)++;
        }
        return;
    }

    if (teamed[current]) {
        //for (s=0; s<current; ++s) printf(" ");
        //printf("%d is coupled, continue...\n", current);
        current++;
        pairUp(pref, teamed, size,max,current,score,howmany);
        current--;
        return;
    }

    for(i=0;i<size;i++)
    {
        if(teamed[i] || (i==current)) {
            //for (s=0; s<current; ++s) printf(" ");
            //printf("%d %d are denied\n", current, i);
            continue;
        }

        int tmp_score=calcScore(pref,size,current,i);
        //for (s=0; s<current; ++s) printf(" ");
        //printf("%d %d are couple, score=%d\n", current, i, tmp_score);

        teamed[i] = true;
        teamed[current] = true;
        score += tmp_score;
        current++;

        pairUp(pref, teamed, size,max,current,score,howmany);

        current--;
        score -= tmp_score;
        teamed[current] = false;
        teamed[i] = false;
    }
}
















